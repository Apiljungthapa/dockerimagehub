name: CI/CD for Dockerized Flask App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Flask pytest

    - name: Run tests
      run: pytest test_app.py

  build-and-push:

    runs-on: ubuntu-latest

    needs: test  # Ensure tests pass before building the Docker image

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t flask-hello-world -f Dockerfile .
        docker tag flask-hello-world:latest ${{ secrets.DOCKER_HUB_USERNAME }}/flask-hello-world:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flask-hello-world:latest

    - name: Summary of Actions
      run: |
        echo "Steps completed:"
        echo "1. Checked out the code."
        echo "2. Set up Docker Buildx."
        echo "3. Logged in to Docker Hub."
        echo "4. Built Docker image for the Flask application from Dockerfile."
        echo "5. Tagged and pushed Docker image to Docker Hub."
        echo "CI/CD pipeline completed successfully!"
